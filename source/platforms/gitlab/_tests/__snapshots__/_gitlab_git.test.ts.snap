// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GitLabGit DSL gitlabChangesToDiff should convert changes to diff 1`] = `
"diff --git a/added-me.txt b/added-me.txt
new file mode 100644
--- /dev/null
+++ b/added-me.txt
@@ -0,0 +1,7 @@
+ Nulla nec nisl neque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Vivamus maximus magna eget quam ultrices, nec malesuada dolor laoreet. Integer et congue metus, sed porttitor lacus. Nam at venenatis est, vel cursus mi. In id velit ut risus imperdiet dapibus. Nulla arcu sem, varius et viverra id, finibus in nulla. Vestibulum auctor finibus velit et pharetra. Nunc at rhoncus tellus, eu sodales metus.
+
+Proin et lobortis diam. Fusce vitae metus sit amet urna ultricies mollis eget quis erat. Maecenas enim elit, consequat ac condimentum non, pretium semper arcu. Fusce vitae pulvinar purus. Etiam egestas mi sed mi aliquet, eget auctor ipsum scelerisque. Suspendisse tincidunt ultrices tortor rutrum dictum. Mauris dictum at justo in rutrum. Cras tristique hendrerit commodo. Pellentesque imperdiet convallis dolor, ac sollicitudin urna dignissim vitae. In et neque eget arcu porttitor consectetur ut sed metus. Nam mattis in elit ut sagittis. Etiam hendrerit nunc dui, ut aliquam enim vehicula ut. Integer in interdum arcu, eu vulputate mi. Mauris aliquam erat lectus, vitae facilisis mauris lacinia eu. Aliquam pretium elit neque, et ultrices diam maximus eu.
+
+Aenean posuere nisi non nibh tempus, id ornare tortor maximus. Proin eu ornare dui, sed vehicula est. Sed euismod risus lectus, eu imperdiet quam convallis eget. Proin vitae tellus malesuada, iaculis ante ut, pellentesque augue. Maecenas ullamcorper turpis ante, a porta magna ultricies nec. Maecenas sed ipsum ex. Vestibulum auctor et dolor sit amet elementum. Phasellus egestas velit vitae dapibus accumsan. Aenean faucibus pharetra purus, egestas auctor nisi maximus porta. Nulla in enim quis enim scelerisque cursus eu non quam.
+
+Suspendisse iaculis, nulla molestie volutpat laoreet, metus odio eleifend ex, eget malesuada mi nibh at tortor. Praesent semper mattis felis, a tempor purus mattis ut. Pellentesque sodales non odio non blandit. Nunc metus est, euismod vitae sem ut, molestie venenatis lectus. Nulla porta sagittis ipsum ac semper. Pellentesque augue neque, vulputate sit amet consequat et, commodo tempor eros. Nam gravida lorem ante, sed facilisis libero hendrerit sed. Praesent sed facilisis ex. Curabitur posuere consectetur nisi, non mollis purus pellentesque quis. Integer non dignissim magna. Ut a consequat enim. Cras viverra leo a magna finibus, in fringilla odio placerat. Cras quis est congue, congue velit sed, fermentum urna. Cras rutrum leo tempor lectus fringilla tincidunt. Integer nec lacinia sem, quis finibus turpis. 
\\\\ No newline at end of file

diff --git a/change-me.txt b/change-me.txt

--- a/change-me.txt
+++ b/change-me.txt
@@ -2,8 +2,11 @@
 
 Praesent id venenatis nunc, et egestas augue. Vestibulum vitae posuere odio, quis blandit elit. Nullam mattis ante sed purus vehicula ultricies. Phasellus facilisis hendrerit sem eget ultricies. Donec vestibulum ac lacus in faucibus. Vestibulum interdum dolor et lacinia hendrerit. Curabitur sem lectus, ornare vitae nunc pharetra, aliquam cursus lorem. Curabitur ut gravida felis. Sed aliquam purus porttitor massa dignissim porttitor. Vivamus condimentum, turpis nec semper posuere, lacus ipsum mattis quam, eleifend maximus erat tellus nec velit. Mauris tristique eros erat, id rutrum nisl ultricies at.
 
-Nullam vitae odio dapibus, euismod eros a, vehicula libero. Cras laoreet diam id venenatis tincidunt. Curabitur ut eros arcu. Aliquam consectetur ornare commodo. Aliquam vel sem eget nisi consequat accumsan nec at ipsum. Integer varius ultrices tellus et faucibus. Donec eu aliquet mi. Aenean sit amet dui lacus. Suspendisse bibendum mauris tellus. Aenean interdum semper augue ut cursus. Nam blandit nunc at lectus posuere, id fringilla ex porttitor. Duis vel erat non risus semper bibendum quis vel nunc.
+Nullam vitae odio dapibus, euismod eros a, vehicula libero. Cras laoreet diam id venenatis tincidunt. Curabitur ut eros arcu. Aliquam consectetur ornare commodo. Aliquam vel sem eget nisi consequat accumsan nec at ipsum. Integer varius ultrices tellus et faucibus. Donec eu aliquet mi. Aenean sit amet dui lacus. Suspendisse bibendum mauris tellus. Aenean interdum semper augue ut cursus. , id fringilla ex porttitor. Duis vel erat non risus semper bibendum quis vel nunc.
 
 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec laoreet diam sem, pulvinar congue turpis laoreet faucibus. Morbi commodo ornare dolor vitae eleifend. Duis at massa mollis, gravida odio vitae, pulvinar dui. Aliquam ullamcorper ante vel nulla interdum, vel sollicitudin ante semper. Proin convallis tempor enim. Quisque interdum varius dolor eu luctus. Aliquam et eros purus. Praesent euismod ligula ac mi tristique gravida. Sed et tempus erat. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 
-Cras euismod velit quis eros ultrices ullamcorper. Fusce et nisi et mi sollicitudin vulputate eu eget nisi. Quisque eu elit lectus. Donec et cursus lacus. In hac habitasse platea dictumst. Vivamus ante turpis, cursus a interdum sed, viverra at nibh. Morbi ante tellus, efficitur eu justo in, feugiat imperdiet turpis. Morbi tellus felis, efficitur quis viverra at, euismod quis arcu. Integer pretium congue tincidunt. 
\\\\ No newline at end of file
+Cras euismod velit quis eros ultrices ullamcorper. Fusce et nisi et mi sollicitudin vulputate eu eget nisi. Quisque eu elit lectus. Donec et cursus lacus. In hac habitasse platea dictumst. Vivamus ante turpis, cursus a interdum sed, viverra at nibh. Morbi ante tellus, efficitur eu justo in, feugiat imperdiet turpis. Morbi tellus felis, efficitur quis viverra at, euismod quis arcu. Integer pretium congue tincidunt. 
+
+safaklsdfjasl;kdfasdf;;kjasf
+asdfkasdfjal;ksdf
\\\\ No newline at end of file

diff --git a/delete-me.txt b/delete-me.txt
deleted file mode 100644
--- a/delete-me.txt
+++ /dev/null
@@ -1,7 +0,0 @@
- Ut vitae nunc felis. In pulvinar ipsum accumsan, porta nisl eget, posuere ligula. Ut ultricies fermentum magna, vitae consectetur dolor bibendum eget. Donec libero turpis, tincidunt et nisl id, rutrum finibus felis. Duis consequat et lectus sed semper. Pellentesque at elit et odio hendrerit sollicitudin. Vivamus felis orci, efficitur tincidunt fermentum sit amet, rutrum non odio. Mauris ac lacus vel odio varius ultricies id vitae mi. Sed vitae metus dolor. Fusce blandit suscipit neque nec ultricies. Mauris mi dolor, sagittis nec viverra non, accumsan eu sapien. Nam nec faucibus turpis, et pulvinar nisl. Proin interdum consequat velit, non tempus dolor volutpat vitae. Integer dignissim varius porta. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Sed turpis odio, lacinia ultrices euismod id, vestibulum a mi.
-
-Quisque rhoncus, odio at lobortis rutrum, erat elit pretium quam, sodales porta erat lorem in velit. Cras nisl magna, rutrum non urna non, tempus volutpat urna. Mauris venenatis, neque vitae efficitur bibendum, diam neque porttitor nulla, hendrerit finibus arcu ligula sit amet est. Suspendisse tincidunt nec arcu semper sodales. Aliquam rutrum odio arcu, nec rhoncus felis tempor in. Sed tempus ut eros ac tincidunt. Vivamus non nisi tellus. Maecenas vulputate nisi arcu, sed fermentum nunc mollis et. Fusce interdum ligula sit amet interdum suscipit. Aenean laoreet aliquet lacus. Nulla facilisi. Integer scelerisque turpis velit, ac blandit sem mattis in. Pellentesque id augue nisl. Praesent bibendum, elit et accumsan ultricies, nisl urna euismod velit, eu efficitur nibh lacus eget nisl. Sed facilisis nibh faucibus tincidunt ultrices.
-
-Nullam ullamcorper mi leo, id placerat sem viverra vel. Donec eu orci efficitur, commodo metus vel, malesuada erat. Sed vitae est eget odio commodo bibendum. Nam interdum nisl in erat ornare, tincidunt porttitor quam suscipit. Morbi egestas sed tellus ac maximus. Vivamus efficitur porta mi a mollis. Nulla vitae nulla sed tellus vulputate vulputate ac quis leo.
-
-Quisque purus neque, porta at felis ut, pulvinar convallis elit. Aliquam tempor tortor sed quam eleifend, ac molestie felis blandit. Fusce ornare, purus non rhoncus aliquam, mi leo porttitor ante, sodales ultrices felis urna nec risus. Phasellus luctus lectus ipsum. Maecenas fringilla imperdiet nunc, a facilisis eros commodo quis. Vivamus mollis lobortis sem, vel gravida dolor consequat nec. Curabitur eget sem condimentum, ultrices magna non, ullamcorper nisl. Etiam consectetur tellus est, eget scelerisque nisi auctor ac. Nam egestas ac elit nec rutrum. Nunc tristique, tortor faucibus finibus mollis, augue nulla eleifend justo, eu condimentum mauris lacus ut libero. Maecenas vehicula semper neque non finibus. Mauris mollis ultrices commodo. Ut pulvinar quis neque vitae tempus. Maecenas condimentum aliquam nisl pretium posuere.

diff --git a/rename-me.txt b/renamed.txt
rename from rename-me.txt
rename to renamed.txt
--- a/rename-me.txt
+++ b/renamed.txt
@@ -2,7 +2,7 @@ a vitae, dignissim vel nunc. Integer gravida nibh nisl, in euismod nulla aliquam
 
 Nunc cursus rutrum ultricies. Vivamus condimentum elit eros, non tincidunt orci accumsan id. Ut malesuada non massa tincidunt ullamcorper. Aliquam sollicitudin tellus quis metus suscipit aliquam. Donec fringilla eros risus, et aliquet neque consectetur efficitur. Sed facilisis lectus augue, pharetra commodo augue eleifend a. Aenean vel convallis eros. In a elementum dui. Cras facilisis nunc neque, ut sollicitudin nisl dignissim non.
 
-Duis a lectus non dolor lobortis venenatis. Sed feugiat non felis tempus euismod. Mauris ac risus eu magna varius tristique ut blandit nisi. Pellentesque efficitur maximus dictum. Maecenas nisl felis, posuere et nunc non, pellentesque luctus risus. Fusce rhoncus sed eros quis efficitur. Sed lacinia pharetra auctor. Suspendisse vestibulum neque quis ligula pharetra mollis. Vivamus non nisi id mauris tempor gravida. Pellentesque nec metus ut enim vulputate blandit rutrum at justo. Curabitur lorem ante, cursus eu mattis eu, pharetra ornare odio.
+Duis a lectuon dolor lobortis venenatis. Sed feugiat non felis tempus euismod. Mauris ac risus eu magna varius tristique ut blandit nisi. Pellentesque efficitur maximus dictum. Maecenas nisl felis, posuere et nunc non, pellentesque luctus risus. Fusce rhoncus sed eros quis efficitur. Sed lacinia pharetra auctor. Suspendisse vestibulum neque quis ligula pharetra mollis. Vivamus non nisi id mauris tempor gravida. Pellentesque nec metus ut enim vulputate blandit rutrum at justo. Curabitur lorem ante, cursus eu mattis eu, pharetra ornare odio.
 
 Phasellus id commodo diam. Fusce egestas erat vel lectus consequat, vel varius augue convallis. Morbi eu nunc id orci elementum consequat. Morbi quis elit congue, placerat felis ac, laoreet magna. Aenean euismod augue sapien, sit amet sodales lectus faucibus ac. Nulla sagittis mi ex, a laoreet sem pulvinar at. Quisque eu magna in justo blandit imperdiet. Suspendisse sollicitudin fringilla ipsum euismod lacinia. Donec dignissim, neque quis efficitur eleifend, magna risus condimentum ipsum, a iaculis sapien tortor a neque. Praesent molestie ut est sed tempus. Nullam ut sodales mi. Vestibulum lobortis erat ut mattis semper. Etiam at convallis odio. Aliquam at convallis erat. Vivamus consectetur nulla vel nibh elementum, et facilisis urna vehicula. Vivamus facilisis a nunc vel tincidunt.
 
"
`;

exports[`GitLabGit DSL show diff chunks for a specific file 1`] = `
Array [
  Object {
    "changes": Array [
      Object {
        "content": " # frozen_string_literal: true",
        "ln1": 1,
        "ln2": 1,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " ",
        "ln1": 2,
        "ln2": 2,
        "normal": true,
        "type": "normal",
      },
      Object {
        "add": true,
        "content": "+require 'digest/md5'",
        "ln": 3,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+",
        "ln": 4,
        "type": "add",
      },
      Object {
        "content": " MESSAGE = <<MARKDOWN",
        "ln1": 3,
        "ln2": 5,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " ## Reviewer roulette",
        "ln1": 4,
        "ln2": 6,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " ",
        "ln1": 5,
        "ln2": 7,
        "normal": true,
        "type": "normal",
      },
    ],
    "content": "@@ -1,5 +1,7 @@",
    "newLines": 7,
    "newStart": 1,
    "oldLines": 5,
    "oldStart": 1,
  },
  Object {
    "changes": Array [
      Object {
        "content": " for them.",
        "ln1": 29,
        "ln2": 31,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " MARKDOWN",
        "ln1": 30,
        "ln2": 32,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " ",
        "ln1": 31,
        "ln2": 33,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "-def spin(team, project, category)",
        "del": true,
        "ln": 32,
        "type": "del",
      },
      Object {
        "add": true,
        "content": "+def spin(team, project, category, branch_name)",
        "ln": 34,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+  rng = Random.new(Digest::MD5.hexdigest(branch_name).to_i(16))",
        "ln": 35,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+",
        "ln": 36,
        "type": "add",
      },
      Object {
        "content": "   reviewers = team.select { |member| member.reviewer?(project, category) }",
        "ln1": 33,
        "ln2": 37,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   traintainers = team.select { |member| member.traintainer?(project, category) }",
        "ln1": 34,
        "ln2": 38,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   maintainers = team.select { |member| member.maintainer?(project, category) }",
        "ln1": 35,
        "ln2": 39,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " ",
        "ln1": 36,
        "ln2": 40,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   # TODO: filter out people who are currently not in the office",
        "ln1": 37,
        "ln2": 41,
        "normal": true,
        "type": "normal",
      },
      Object {
        "add": true,
        "content": "+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57652",
        "ln": 42,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+  #",
        "ln": 43,
        "type": "add",
      },
      Object {
        "content": "   # TODO: take CODEOWNERS into account?",
        "ln1": 38,
        "ln2": 44,
        "normal": true,
        "type": "normal",
      },
      Object {
        "add": true,
        "content": "+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57653",
        "ln": 45,
        "type": "add",
      },
      Object {
        "content": " ",
        "ln1": 39,
        "ln2": 46,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   # Make traintainers have triple the chance to be picked as a reviewer",
        "ln1": 40,
        "ln2": 47,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "-  reviewer = (reviewers + traintainers + traintainers).sample",
        "del": true,
        "ln": 41,
        "type": "del",
      },
      Object {
        "content": "-  maintainer = maintainers.sample",
        "del": true,
        "ln": 42,
        "type": "del",
      },
      Object {
        "add": true,
        "content": "+  reviewer = (reviewers + traintainers + traintainers).sample(random: rng)",
        "ln": 48,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+  maintainer = maintainers.sample(random: rng)",
        "ln": 49,
        "type": "add",
      },
      Object {
        "content": " ",
        "ln1": 43,
        "ln2": 50,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   \\"| #{helper.label_for_category(category)} | #{reviewer&.markdown_name} | #{maintainer&.markdown_name} |\\"",
        "ln1": 44,
        "ln2": 51,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " end",
        "ln1": 45,
        "ln2": 52,
        "normal": true,
        "type": "normal",
      },
    ],
    "content": "@@ -29,17 +31,22 @@ Please consider creating a merge request to",
    "newLines": 22,
    "newStart": 31,
    "oldLines": 17,
    "oldStart": 29,
  },
  Object {
    "changes": Array [
      Object {
        "content": " # CSS Clean up MRs are reviewed using a slightly different process, so we",
        "ln1": 65,
        "ln2": 72,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " # disable the review roulette for such MRs.",
        "ln1": 66,
        "ln2": 73,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_labels.include?('CSS cleanup')",
        "ln1": 67,
        "ln2": 74,
        "normal": true,
        "type": "normal",
      },
      Object {
        "add": true,
        "content": "+  # Strip leading and trailing CE/EE markers",
        "ln": 75,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+  canonical_branch_name = gitlab",
        "ln": 76,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+                            .mr_json['source_branch']",
        "ln": 77,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+                            .gsub(/^[ce]e-/, '')",
        "ln": 78,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+                            .gsub(/-[ce]e$/, '')",
        "ln": 79,
        "type": "add",
      },
      Object {
        "add": true,
        "content": "+",
        "ln": 80,
        "type": "add",
      },
      Object {
        "content": "   team =",
        "ln1": 68,
        "ln2": 81,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "     begin",
        "ln1": 69,
        "ln2": 82,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "       helper.project_team",
        "ln1": 70,
        "ln2": 83,
        "normal": true,
        "type": "normal",
      },
    ],
    "content": "@@ -65,6 +72,12 @@ categories = changes.keys - [:unknown]",
    "newLines": 12,
    "newStart": 72,
    "oldLines": 6,
    "oldStart": 65,
  },
  Object {
    "changes": Array [
      Object {
        "content": "   project = helper.project_name",
        "ln1": 79,
        "ln2": 92,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   unknown = changes.fetch(:unknown, [])",
        "ln1": 80,
        "ln2": 93,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": " ",
        "ln1": 81,
        "ln2": 94,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "-  rows = categories.map { |category| spin(team, project, category) }",
        "del": true,
        "ln": 82,
        "type": "del",
      },
      Object {
        "add": true,
        "content": "+  rows = categories.map { |category| spin(team, project, category, canonical_branch_name) }",
        "ln": 95,
        "type": "add",
      },
      Object {
        "content": " ",
        "ln1": 83,
        "ln2": 96,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   markdown(MESSAGE)",
        "ln1": 84,
        "ln2": 97,
        "normal": true,
        "type": "normal",
      },
      Object {
        "content": "   markdown(CATEGORY_TABLE_HEADER + rows.join(\\"\\\\n\\")) unless rows.empty?",
        "ln1": 85,
        "ln2": 98,
        "normal": true,
        "type": "normal",
      },
    ],
    "content": "@@ -79,7 +92,7 @@ if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_l",
    "newLines": 7,
    "newStart": 92,
    "oldLines": 7,
    "oldStart": 79,
  },
]
`;

exports[`GitLabGit DSL shows the diff for a specific file 1`] = `"#frozen_string_literal:true+require'digest/md5'+MESSAGE=<<MARKDOWN##Reviewerrouletteforthem.MARKDOWN-defspin(team,project,category)+defspin(team,project,category,branch_name)+rng=Random.new(Digest::MD5.hexdigest(branch_name).to_i(16))+reviewers=team.select{|member|member.reviewer?(project,category)}traintainers=team.select{|member|member.traintainer?(project,category)}maintainers=team.select{|member|member.maintainer?(project,category)}#TODO:filteroutpeoplewhoarecurrentlynotintheoffice+#https://gitlab.com/gitlab-org/gitlab-ce/issues/57652+##TODO:takeCODEOWNERSintoaccount?+#https://gitlab.com/gitlab-org/gitlab-ce/issues/57653#Maketraintainershavetriplethechancetobepickedasareviewer-reviewer=(reviewers+traintainers+traintainers).sample-maintainer=maintainers.sample+reviewer=(reviewers+traintainers+traintainers).sample(random:rng)+maintainer=maintainers.sample(random:rng)\\"|#{helper.label_for_category(category)}|#{reviewer&.markdown_name}|#{maintainer&.markdown_name}|\\"end#CSSCleanupMRsarereviewedusingaslightlydifferentprocess,sowe#disablethereviewrouletteforsuchMRs.ifchanges.any?&&!gitlab.mr_labels.include?('singlecodebase')&&!gitlab.mr_labels.include?('CSScleanup')+#StripleadingandtrailingCE/EEmarkers+canonical_branch_name=gitlab+.mr_json['source_branch']+.gsub(/^[ce]e-/,'')+.gsub(/-[ce]e$/,'')+team=beginhelper.project_teamproject=helper.project_nameunknown=changes.fetch(:unknown,[])-rows=categories.map{|category|spin(team,project,category)}+rows=categories.map{|category|spin(team,project,category,canonical_branch_name)}markdown(MESSAGE)markdown(CATEGORY_TABLE_HEADER+rows.join(\\"\\\\n\\"))unlessrows.empty?"`;

exports[`GitLabGit DSL textDiffForFile returns a diff for modified files 1`] = `
Object {
  "added": "+require 'digest/md5'
+
+def spin(team, project, category, branch_name)
+  rng = Random.new(Digest::MD5.hexdigest(branch_name).to_i(16))
+
+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57652
+  #
+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57653
+  reviewer = (reviewers + traintainers + traintainers).sample(random: rng)
+  maintainer = maintainers.sample(random: rng)
+  # Strip leading and trailing CE/EE markers
+  canonical_branch_name = gitlab
+                            .mr_json['source_branch']
+                            .gsub(/^[ce]e-/, '')
+                            .gsub(/-[ce]e$/, '')
+
+  rows = categories.map { |category| spin(team, project, category, canonical_branch_name) }",
  "after": "# frozen_string_literal: true

require 'digest/md5'

MESSAGE = <<MARKDOWN
## Reviewer roulette

Changes that require review have been detected! A merge request is normally
reviewed by both a reviewer and a maintainer in its primary category (e.g.
~frontend or ~backend), and by a maintainer in all other categories.
MARKDOWN

CATEGORY_TABLE_HEADER = <<MARKDOWN

To spread load more evenly across eligible reviewers, Danger has randomly picked
a candidate for each review slot. Feel free to override this selection if you
think someone else would be better-suited, or the chosen person is unavailable.

Once you've decided who will review this merge request, mention them as you
normally would! Danger does not (yet?) automatically notify them for you.

| Category | Reviewer | Maintainer |
| -------- | -------- | ---------- |
MARKDOWN

UNKNOWN_FILES_MESSAGE = <<MARKDOWN

These files couldn't be categorised, so Danger was unable to suggest a reviewer.
Please consider creating a merge request to
[add support](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/danger/helper.rb)
for them.
MARKDOWN

def spin(team, project, category, branch_name)
  rng = Random.new(Digest::MD5.hexdigest(branch_name).to_i(16))

  reviewers = team.select { |member| member.reviewer?(project, category) }
  traintainers = team.select { |member| member.traintainer?(project, category) }
  maintainers = team.select { |member| member.maintainer?(project, category) }

  # TODO: filter out people who are currently not in the office
  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57652
  #
  # TODO: take CODEOWNERS into account?
  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57653

  # Make traintainers have triple the chance to be picked as a reviewer
  reviewer = (reviewers + traintainers + traintainers).sample(random: rng)
  maintainer = maintainers.sample(random: rng)

  \\"| #{helper.label_for_category(category)} | #{reviewer&.markdown_name} | #{maintainer&.markdown_name} |\\"
end

def build_list(items)
  list = items.map { |filename| \\"* \`#{filename}\`\\" }.join(\\"\\\\n\\")

  if items.size > 10
    \\"\\\\n<details>\\\\n\\\\n#{list}\\\\n\\\\n</details>\\"
  else
    list
  end
end

changes = helper.changes_by_category

# Ignore any files that are known but uncategoried. Prompt for any unknown files
changes.delete(:none)
categories = changes.keys - [:unknown]

# Single codebase MRs are reviewed using a slightly different process, so we
# disable the review roulette for such MRs.
# CSS Clean up MRs are reviewed using a slightly different process, so we
# disable the review roulette for such MRs.
if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_labels.include?('CSS cleanup')
  # Strip leading and trailing CE/EE markers
  canonical_branch_name = gitlab
                            .mr_json['source_branch']
                            .gsub(/^[ce]e-/, '')
                            .gsub(/-[ce]e$/, '')

  team =
    begin
      helper.project_team
    rescue => err
      warn(\\"Reviewer roulette failed to load team data: #{err.message}\\")
      []
    end

  # Exclude the MR author from the team for selection purposes
  team.delete_if { |teammate| teammate.username == gitlab.mr_author }

  project = helper.project_name
  unknown = changes.fetch(:unknown, [])

  rows = categories.map { |category| spin(team, project, category, canonical_branch_name) }

  markdown(MESSAGE)
  markdown(CATEGORY_TABLE_HEADER + rows.join(\\"\\\\n\\")) unless rows.empty?
  markdown(UNKNOWN_FILES_MESSAGE + build_list(unknown)) unless unknown.empty?
end
",
  "before": "# frozen_string_literal: true

MESSAGE = <<MARKDOWN
## Reviewer roulette

Changes that require review have been detected! A merge request is normally
reviewed by both a reviewer and a maintainer in its primary category (e.g.
~frontend or ~backend), and by a maintainer in all other categories.
MARKDOWN

CATEGORY_TABLE_HEADER = <<MARKDOWN

To spread load more evenly across eligible reviewers, Danger has randomly picked
a candidate for each review slot. Feel free to override this selection if you
think someone else would be better-suited, or the chosen person is unavailable.

Once you've decided who will review this merge request, mention them as you
normally would! Danger does not (yet?) automatically notify them for you.

| Category | Reviewer | Maintainer |
| -------- | -------- | ---------- |
MARKDOWN

UNKNOWN_FILES_MESSAGE = <<MARKDOWN

These files couldn't be categorised, so Danger was unable to suggest a reviewer.
Please consider creating a merge request to
[add support](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/danger/helper.rb)
for them.
MARKDOWN

def spin(team, project, category)
  reviewers = team.select { |member| member.reviewer?(project, category) }
  traintainers = team.select { |member| member.traintainer?(project, category) }
  maintainers = team.select { |member| member.maintainer?(project, category) }

  # TODO: filter out people who are currently not in the office
  # TODO: take CODEOWNERS into account?

  # Make traintainers have triple the chance to be picked as a reviewer
  reviewer = (reviewers + traintainers + traintainers).sample
  maintainer = maintainers.sample

  \\"| #{helper.label_for_category(category)} | #{reviewer&.markdown_name} | #{maintainer&.markdown_name} |\\"
end

def build_list(items)
  list = items.map { |filename| \\"* \`#{filename}\`\\" }.join(\\"\\\\n\\")

  if items.size > 10
    \\"\\\\n<details>\\\\n\\\\n#{list}\\\\n\\\\n</details>\\"
  else
    list
  end
end

changes = helper.changes_by_category

# Ignore any files that are known but uncategoried. Prompt for any unknown files
changes.delete(:none)
categories = changes.keys - [:unknown]

# Single codebase MRs are reviewed using a slightly different process, so we
# disable the review roulette for such MRs.
# CSS Clean up MRs are reviewed using a slightly different process, so we
# disable the review roulette for such MRs.
if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_labels.include?('CSS cleanup')
  team =
    begin
      helper.project_team
    rescue => err
      warn(\\"Reviewer roulette failed to load team data: #{err.message}\\")
      []
    end

  # Exclude the MR author from the team for selection purposes
  team.delete_if { |teammate| teammate.username == gitlab.mr_author }

  project = helper.project_name
  unknown = changes.fetch(:unknown, [])

  rows = categories.map { |category| spin(team, project, category) }

  markdown(MESSAGE)
  markdown(CATEGORY_TABLE_HEADER + rows.join(\\"\\\\n\\")) unless rows.empty?
  markdown(UNKNOWN_FILES_MESSAGE + build_list(unknown)) unless unknown.empty?
end
",
  "diff": " # frozen_string_literal: true
 
+require 'digest/md5'
+
 MESSAGE = <<MARKDOWN
 ## Reviewer roulette
 
 for them.
 MARKDOWN
 
-def spin(team, project, category)
+def spin(team, project, category, branch_name)
+  rng = Random.new(Digest::MD5.hexdigest(branch_name).to_i(16))
+
   reviewers = team.select { |member| member.reviewer?(project, category) }
   traintainers = team.select { |member| member.traintainer?(project, category) }
   maintainers = team.select { |member| member.maintainer?(project, category) }
 
   # TODO: filter out people who are currently not in the office
+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57652
+  #
   # TODO: take CODEOWNERS into account?
+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57653
 
   # Make traintainers have triple the chance to be picked as a reviewer
-  reviewer = (reviewers + traintainers + traintainers).sample
-  maintainer = maintainers.sample
+  reviewer = (reviewers + traintainers + traintainers).sample(random: rng)
+  maintainer = maintainers.sample(random: rng)
 
   \\"| #{helper.label_for_category(category)} | #{reviewer&.markdown_name} | #{maintainer&.markdown_name} |\\"
 end
 # CSS Clean up MRs are reviewed using a slightly different process, so we
 # disable the review roulette for such MRs.
 if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_labels.include?('CSS cleanup')
+  # Strip leading and trailing CE/EE markers
+  canonical_branch_name = gitlab
+                            .mr_json['source_branch']
+                            .gsub(/^[ce]e-/, '')
+                            .gsub(/-[ce]e$/, '')
+
   team =
     begin
       helper.project_team
   project = helper.project_name
   unknown = changes.fetch(:unknown, [])
 
-  rows = categories.map { |category| spin(team, project, category) }
+  rows = categories.map { |category| spin(team, project, category, canonical_branch_name) }
 
   markdown(MESSAGE)
   markdown(CATEGORY_TABLE_HEADER + rows.join(\\"\\\\n\\")) unless rows.empty?",
  "removed": "-def spin(team, project, category)
-  reviewer = (reviewers + traintainers + traintainers).sample
-  maintainer = maintainers.sample
-  rows = categories.map { |category| spin(team, project, category) }",
}
`;
